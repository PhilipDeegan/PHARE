#! clean build -x mpi -dtKOp py

name: phare

scm: https://github.com/philipdeegan/phare
version: mkn

inc: src

property:
  HDF5_INC: /opt/mpi/rocm_hdf5/include
  HDF5_PTH: /opt/mpi/rocm_hdf5/lib
  HDF5_LIB: hdf5
  mkn.base: base_
  mkn.args: -DPHARE_HAS_HIGHFIVE=1 -DPHARE_DIAG_DOUBLES=1
  mkn.flag: -Wno-macro-redefined -Wno-unknown-cuda-version
  samrai.ver: mpi


profile:
- name: base_
  arg:  ${mkn.flag} ${mkn.args}

- name: gpu_
  parent: base_
  dep: mkn.gpu

- name: base
  parent: ${mkn.base}


- name: core
  parent: base
  inc: src subprojects subprojects/phlop/inc
  src: src/core subprojects/phlop/src/phlop/timing/threaded_scope_timer.cpp
  out: phare_core
  sub:
      cppdict#master&subprojects/cppdict(https://github.com/LaboratoryOfPlasmaPhysics/cppdict)
      menum#master&subprojects/menum(https://github.com/Neargye/magic_enum)
      phlop#master&subprojects/phlop(https://github.com/PhilipDeegan/phlop)
      bstp#master&subprojects/bstp(https://github.com/bshoshany/thread-pool)

- name: amr
  parent: base
  self: core
  dep: llnl.samrai#${samrai.ver}(https://github.com/mkn-nix/llnl.samrai)
  path: ${HDF5_PTH}
  lib: ${HDF5_LIB}
  inc: ${HDF5_INC}
  src: src/amr
  out: phare_amr

- name: diagnostic
  self: amr
  dep: hpc.highfive(https://github.com/mkn-nix/hpc.highfive)
  inc: subprojects/highfive/include


- name: simulator
  parent: base
  self: diagnostic
  out: phare_simulator

- name: exe
  parent: base
  self: simulator init
  dep: lang.pybind11 
  main: src/phare/phare.cpp
  mod: lang.python3
  env: PYTHONPATH=${MKN_ROOT}:${MKN_ROOT}/tests/diagnostic:${MKN_ROOT}/build:${MKN_ROOT}/pyphare

- name: init
  src: src/initializer/data_provider.cpp
  self: core
  out: phare_initializer
  mode: shared # static singleton dict lives here

- name: pybind
  parent: base
  mode: shared
  dep: lang.pybind11
  mod: python3.module lang.python3
  env: |
    MKN_LIB_LINK_LIB=1
    MKN_PYTHON_LIB_EMBED=1

- name: dictator
  parent: pybind
  self: init
  src: src/initializer/dictator.cpp
  install: build/pybindlibs
  out: dictator

- name: cpp
  parent: pybind
  self: simulator init
  src: src/python3/cpp_simulator.cpp
  install: build/pybindlibs
  out: cpp

- name: cpp_etc
  parent: pybind
  self: simulator
  src: src/python3/cpp_etc.cpp
  install: build/pybindlibs
  out: cpp_etc

- name: py
  self: dictator cpp_etc cpp

- name: test
  self: core
  inc: .

- name: test_cpp
  parent: test
  dep: google.test

- name: test_core
  parent: test_cpp
  self: core
  mode: none
  # test: tests/core/(\w)/(test_.*).cpp

- name: test_amr
  parent: test_cpp
  self: amr

- name: test_diagnostics
  parent: test
  mode: none
  mod: lang.python3
  test:
    tests/diagnostic/test-diagnostics_1d.cpp
    tests/diagnostic/test-diagnostics_2d.cpp
  env: PYTHONPATH=${MKN_ROOT}:${MKN_ROOT}/build/tests/diagnostic:${MKN_ROOT}/build:${MKN_ROOT}/pyphare

- name: bench
  self: core
  inc: . tools
  dep: google.benchmark
  test: tools/bench/core/(\w).cpp
  link: -pthread

- name: gpu_pusher
  parent: test
  self: bench
  inc: .
  dep: mkn.gpu
  arg: -DPHARE_WITH_GPU
  env: PYTHONPATH=${MKN_ROOT}:${MKN_ROOT}/tools/bench/core/numerics/pusher:${MKN_ROOT}/build:${MKN_ROOT}/pyphare

- name: rocm_pusher
  parent: gpu_pusher
  main: tools/bench/core/numerics/pusher/gpu.cpp
  arg: -DKUL_GPU_ROCM
  env: PYTHONPATH=${MKN_ROOT}:${MKN_ROOT}/tools/bench/core/numerics/pusher:${MKN_ROOT}/build:${MKN_ROOT}/pyphare

- name: cuda_pusher
  parent: gpu_pusher
  main: tests/amr/solvers/ppc/test_gpu_solverppc.cpp #tools/bench/core/numerics/pusher/gpu.cpp
  arg: -DKUL_GPU_CUDA
  inc: subprojects/thrust
  env: PYTHONPATH=${MKN_ROOT}:${MKN_ROOT}/tools/bench/core/numerics/pusher:${MKN_ROOT}/build:${MKN_ROOT}/pyphare

# - name: cuda_bandwidth_test
#   main: subprojects/cuda-samples/Samples/bandwidthTest/bandwidthTest.cu
#   inc: subprojects/cuda-samples/Common

- name: c_depositor
  test: tools/hw/gpu/bench/depositor.cpp

- name: mkn.gpu_depositor
  dep: mkn.gpu
  test: tools/hw/gpu/bench/depositor.mkn.gpu.cpp

# mkn clean build test run -p mkn.sheath.hip -x res/mkn/hcc.yaml -O
- name: mkn.sheath.hip
  dep: mkn.gpu
  test: tools/hw/gpu/bench/sheath-gpu.hip.cpp

- name: mkn.sheath.cuda
  dep: mkn.gpu
  test: tools/hw/gpu/bench/sheath-gpu.cuda.cpp

- name: test_core_gpu_mkn
  self: core
  arg: -DPHARE_WITH_GPU=1 -DPHARE_HAVE_MKN_GPU=1 -DMKN_GPU_CUDA=1
  dep: google.test mkn.gpu nvidia.thrust
  main: tests/core/data/test_vector.cpp


- name: gpu_test
  parent: test
  self: simulator init
  arg: |
      -DHAVE_RAJA
      -DHAVE_UMPIRE
      -DRAJA_ENABLE_CUDA=1
      -DUMPIRE_ENABLE_CUDA=1
      -DPHARE_WITH_GPU=1
      -DPHARE_HAS_HIGHFIVE=1
      -DPHARE_WITH_KUL=1
      -DKUL_GPU_CUDA=1
  test:
    tests/core/data/ndarray/test_main.cpp

# tests/core/numerics/ion_updater/test_updater.cpp
# tests/core/numerics/interpolator/test_main.cpp
# tests/core/data/field/test_field.cpp
# tests/core/data/vecfield/test_main.cpp
# tests/core/data/ions/test_ions.cpp
# tests/core/data/electrons/test_electrons.cpp
# tests/core/numerics/ampere/test_main.cpp
# tests/core/numerics/faraday/test_main.cpp
# tests/core/numerics/ohm/test_main.cpp

- name: format
  mod: |
    clang.format{init{style: file, paths: src}}
